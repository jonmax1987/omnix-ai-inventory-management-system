name: Accessibility Testing

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/accessibility-testing.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/accessibility-testing.yml'

jobs:
  accessibility-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run TypeScript type checking
      working-directory: ./frontend
      run: npm run type-check
      
    - name: Run accessibility tests
      working-directory: ./frontend
      run: npm run test:accessibility
      
    - name: Run comprehensive test suite with coverage
      working-directory: ./frontend
      run: npm run test:coverage
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend,accessibility
        name: accessibility-tests
        
    - name: Generate accessibility report
      working-directory: ./frontend
      run: |
        npm run axe:ci > accessibility-report.txt 2>&1 || true
        echo "## Accessibility Test Results" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        cat accessibility-report.txt >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        
    - name: Comment accessibility results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          try {
            const report = fs.readFileSync('./frontend/accessibility-report.txt', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🔍 Accessibility Test Results\n\n\`\`\`\n${report}\n\`\`\`\n\n**Please ensure all accessibility issues are resolved before merging.**`
            });
          } catch (error) {
            console.log('No accessibility report found or error reading report');
          }

  lighthouse-audit:
    runs-on: ubuntu-latest
    needs: accessibility-tests
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: Start frontend server
      working-directory: ./frontend
      run: |
        npm start &
        sleep 10
        
    - name: Run Lighthouse accessibility audit
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './frontend/.lighthouserc.json'
        temporaryPublicStorage: true
        runs: 3
        
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v3
      with:
        name: lighthouse-results
        path: .lighthouseci/

  pa11y-tests:
    runs-on: ubuntu-latest
    needs: accessibility-tests
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      working-directory: ./frontend
      run: |
        npm ci
        npm install -g pa11y pa11y-ci
        
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      
    - name: Start frontend server
      working-directory: ./frontend
      run: |
        npm start &
        sleep 10
        
    - name: Run Pa11y accessibility tests
      working-directory: ./frontend
      run: |
        echo "Running Pa11y tests..."
        pa11y-ci --sitemap http://localhost:3000/sitemap.xml \
          --standard WCAG2AA \
          --threshold 5 \
          --reporter json > pa11y-results.json || true
          
        echo "## Pa11y Test Results" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
        cat pa11y-results.json >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload Pa11y results
      uses: actions/upload-artifact@v3
      with:
        name: pa11y-results
        path: ./frontend/pa11y-results.json

  accessibility-summary:
    runs-on: ubuntu-latest
    needs: [accessibility-tests, lighthouse-audit, pa11y-tests]
    if: always()
    
    steps:
    - name: Create accessibility summary
      run: |
        echo "# 🌟 OMNIX AI Accessibility Testing Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Jest + Axe Tests | ${{ needs.accessibility-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Lighthouse Audit | ${{ needs.lighthouse-audit.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Pa11y Tests | ${{ needs.pa11y-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Standards Compliance" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ WCAG 2.1 AA Compliance" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Section 508 Compliance" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Keyboard Navigation" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Screen Reader Compatibility" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Color Contrast Requirements" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Mobile Accessibility" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "- Review any failing tests above" >> $GITHUB_STEP_SUMMARY
        echo "- Check artifact uploads for detailed reports" >> $GITHUB_STEP_SUMMARY
        echo "- Ensure all accessibility issues are resolved" >> $GITHUB_STEP_SUMMARY